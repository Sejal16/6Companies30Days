https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1#

class Solution{
    static int equalPartition(int n, int arr[])
    {
    int s=0;
    for(int x: arr)
    s+=x;
    if(s%2!=0)
    return 0;
    s/=2;
    int dp[][]=new int[n+1][s+1];
for(int x[]:dp)
Arrays.fill(x,-1);
    return (solve(n,arr,0,s,dp));
     
    }
    public static int solve(int n,int arr[],int idx,int target,int dp[][]){
        
        
       
        if(target==0)
        {
            return 1;
        }
         if(idx>=n)
        {
            return 0;
        }
        if(target<0)
        return 0;
        
        if(dp[idx][target]!=-1)
        return dp[idx][target];
        
        int pick=solve(n,arr,idx+1,target-arr[idx],dp);
        if(pick==1)
        return dp[idx][target]=1;
         int notpick=solve(n,arr,idx+1,target,dp);
        if( notpick==1)
return dp[idx][target]=1;
        
       return dp[idx][target]=0;
    }
}