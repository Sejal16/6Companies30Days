https://practice.geeksforgeeks.org/problems/alien-dictionary/1/#

class Solution
{
    public String findOrder(String [] dict, int n, int m)
    {
          int in[]=new int[m];
            List<List<Integer>> adj=new ArrayList<>();
       
        // Make a graph
        for(int i=0;i<m;i++)
            adj.add(new ArrayList<>());
        for(int i=1;i<n;i++)
        {
            for(int j=0;j<Math.min(dict[i].length(),dict[i-1].length());j++){
              if(dict[i].charAt(j)!=dict[i-1].charAt(j))
              {
                  int u=dict[i-1].charAt(j)-'a';
                  int v=dict[i].charAt(j)-'a';
                  adj.get(u).add(v);
                  in[v]++;
                  break;
              }
            }
            
        }
        
        // Topo sort
        Queue<Integer> q=new LinkedList<>();
           for(int i=0;i<in.length;i++ )
           {
               if(in[i]==0)
               q.offer(i);
           }
           StringBuilder sb=new StringBuilder();
        while(!q.isEmpty())
        {
          int u=q.poll();
          char c=(char)(u+'a');
          sb.append(c);
        //   System.out.println(c);
          for(int v:adj.get(u))
          {
              in[v]--;
              if(in[v]==0)
              q.offer(v);
          }
        }
        return sb.toString();
    }
}